services:
  postgres:
    image: postgres:14
    container_name: bot-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: bot
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "bot"]
      interval: 15s
      timeout: 10s
      retries: 10

  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram-bot
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=bot
      - DB_USER=postgres
      - DB_PASSWORD=admin
      - TOKEN=7991006616:AAEuHwhqbFyMVXTVy56ocv22JWZELf5kM7o
      - HTTPX_READ_TIMEOUT=60
      - HTTPX_CONNECT_TIMEOUT=30
      - HTTPX_POOL_TIMEOUT=30
    volumes:
      - ./lessons:/app/lessons
      - ./video.mp4:/app/video.mp4
    networks:
      - bot-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

networks:
  bot-network:
    driver: bridge

volumes:
  postgres_data:
